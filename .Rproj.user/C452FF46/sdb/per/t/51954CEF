{
    "contents" : "library(plyr)\nbase.path <- \"D:/data/\"\nfile.name <- \"liver_labeled_data.txt\"\nperiod.sample.count <- 10 #each period has 10 samples\nperiod.count <- 5 #we have 5 periods\nfeatures.filered.by.sd <- 5\nmatrix.table <- read.table(paste(base.path,file.name,sep=\"\"),\n                     header=TRUE,sep=\"\")\n\ndivide.files.by.periods <- function(){\n  \n  period.name <- \"\"\n  z <- c((1-period.sample.count):1)  \n  \n  for(i in 1:period.count){\n    z <- z+period.sample.count\n    z[1]<-1\n    \n    #4wk,8wk,12wk,16wk,20wk\n    period.name <- paste(\"matrix_table_\",i*4,\"wk.txt\",sep=\"\")\n    write.table(matrix.table[z],file=paste(base.path,period.name,sep=\"\"),\n                row.names = FALSE)\n  }\n}\n\ncalc.mean.sd.and.filter.by.sd <- function(file.name,features.filered.by.sd=1000){\n  period.matrix.table <- read.table(paste(base.path,file.name,\".txt\",sep=\"\"),\n                                   header=TRUE,sep=\"\")  \n  z <- c(2:(period.sample.count+1))\n  exam_names <-names(period.matrix.table)[z]\n  mean <- apply(period.matrix.table[z],1,mean)\n  sd <- apply(period.matrix.table[z],1,sd) \n  mean.sd <- data.frame(mean=mean,sd=sd)\n  table.with.mean.sd <- cbind(period.matrix.table,mean.sd)\n  \n  write.table(table.with.mean.sd,\n              paste(base.path,file.name,\"_with_mean_sd.txt\",sep=\"\"),\n              row.names=FALSE)\n  table.sorted.by.sd <-table.with.mean.sd[order(-table.with.mean.sd$sd),]\n  table.sorted.by.sd <- table.sorted.by.sd[c(1:features.filered.by.sd),]\n  write.table(table.sorted.by.sd,\n              paste(base.path,file.name,\"_with_mean_and_high_sd.txt\",sep=\"\"),\n              row.names=FALSE)\n}\n\nsd.test <- function(table.with.mean.sd){\n  for(i in 1:period.count){   \n    #4wk,8wk,12wk,16wk,20wk\n    period.name <- paste(\"matrix_table_\",i*4,\"wk\",sep=\"\")\n    calc.mean.sd.and.filter.by.sd(file.name=period.name,\n                                  features.filered.by.sd=features.filered.by.sd)\n  }\n}\n\ncalc.pcc <- function(file.name){\n  filtered.table <- read.table(paste(base.path,file.name,\"_with_mean_and_high_sd.txt\",sep=\"\"),\n                                    header=TRUE,sep=\"\") \n  geneIds <- filtered.table[,1] #as the row names and column names of matrix\n  filtered.table <- filtered.table[,c(2:(period.sample.count+1))]\n  trans.matrix <- t(filtered.table) #matrix Transpose\n  cor.matrix <- 1-cor(trans.matrix)\n  rownames(cor.matrix) <- geneIds\n  colnames(cor.matrix) <- geneIds\n  write.table(cor.matrix,\n              paste(base.path,file.name,\"_cor_matrix.txt\",sep=\"\"),\n              row.names=TRUE,\n              sep=\"\\t\")\n  #print(trans.matrix)\n  #print(cor.matrix)  \n}\nkmeans_result<- \"\"\npcc.test <- function(file.name){\n  cor.table <- read.table(paste(base.path,file.name,\"_cor_matrix.txt\",sep=\"\"),\n                          header=TRUE,sep=\"\")\n  names(cor.table) <- row.names(cor.table)\n  print(cor.table)\n  \n  set.seed(252964) # 设置随机值，为了得到一致结果。\n  kmeans_result <- kmeans(cor.table,3)\n  print(kmeans_result)\n  library(fpc)\n  plotcluster(cor.table, kmeans_result$cluster) # 生成聚类图\n}\n\n#divide.files.by.periods()\n#sd.test()\nfile.name <- paste(\"matrix_table_\",1*4,\"wk\",sep=\"\")\n#calc.pcc(file.name)\npcc.test(file.name)",
    "created" : 1409732162906.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2897897830",
    "id" : "51954CEF",
    "lastKnownWriteTime" : 1410229991,
    "path" : "D:/workspace/GraphDataMining/gdm.R",
    "project_path" : "gdm.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}